services:
    postgres:
        build: ./postgres
        image: postgres
        container_name: postgres
        environment:
            POSTGRES_PASSWORD_FILE: /run/secrets/postgres-passwd
        env_file: .env
        secrets:
            - postgres-passwd
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - postgres_logs:/var/log/postgres
        expose:
            - 5432
        networks:
            - transcendence
        restart: unless-stopped
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -h localhost -p $POSTGRES_PORT -U postgres",
                ]
            interval: 5s
            timeout: 2s
            retries: 3
    django:
        build: ./django
        image: django
        container_name: django
        depends_on:
            postgres:
                condition: service_healthy
        environment:
            POSTGRES_PASSWORD_FILE: /run/secrets/postgres-passwd
            DJANGO_SUPERUSER_PASSWORD_FILE: /run/secrets/django-passwd
        env_file: .env
        secrets:
            - postgres-passwd
            - django-passwd
        volumes:
            - django_data:/usr/src/app
            - static_data:/usr/src/app/staticfiles
            - django_logs:/var/log/django
        expose:
            - 8080
        networks:
            - transcendence
        restart: unless-stopped
    nginx:
        build: ./nginx
        image: nginx
        container_name: nginx
        depends_on:
            django:
                condition: service_started
        expose:
            - 8081
        ports:
            - 8081:8081
        volumes:
            - static_data:/var/www/html
            - nginx_data:/var/www/static
            - nginx_logs:/var/log/nginx
        networks:
            - transcendence
        restart: unless-stopped
    elasticsearch:
        build: ./elasticsearch
        image: elasticsearch
        container_name: elasticsearch
        environment:
            ELASTICSEARCH_PASSWORD_FILE: /run/secrets/elasticsearch-passwd
            KIBANA_PASSWORD_FILE: /run/secrets/kibana-passwd
        env_file: .env
        secrets:
            - elasticsearch-passwd
            - kibana-passwd
        volumes:
            - elasticsearch_data:/usr/share/elasticsearch/data
            - elasticsearch_logs:/var/log/elasticsearch
        expose:
            - 9200
            - 9300
        ports:
            - 9200:9200
        networks:
            - transcendence
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "/usr/local/bin/healthcheck.sh"]
            interval: 5s
            timeout: 2s
            retries: 3
            start_period: 15s
    logstash:
        build: ./logstash
        image: logstash
        container_name: logstash
        depends_on:
            elasticsearch:
                condition: service_healthy
        environment:
            ELASTICSEARCH_PASSWORD_FILE: /run/secrets/elasticsearch-passwd
        env_file: .env
        secrets:
            - elasticsearch-passwd
        volumes:
            - postgres_logs:/var/log/postgres:ro
            - django_logs:/var/log/django:ro
            - nginx_logs:/var/log/nginx:ro
            - elasticsearch_logs:/var/log/elasticsearch:ro
            - kibana_logs:/var/log/kibana:ro
        expose:
            - 5044
            - 9600
        networks:
            - transcendence
        restart: unless-stopped
    kibana:
        build: ./kibana
        image: kibana
        container_name: kibana
        depends_on:
            elasticsearch:
                condition: service_healthy
        environment:
            ELASTICSEARCH_PASSWORD_FILE: /run/secrets/elasticsearch-passwd
            KIBANA_PASSWORD_FILE: /run/secrets/kibana-passwd
        env_file: .env
        secrets:
            - elasticsearch-passwd
            - kibana-passwd
        volumes:
            - kibana_logs:/var/log/kibana
        expose:
            - 5601
        ports:
            - 5601:5601
        networks:
            - transcendence
        restart: unless-stopped

networks:
    transcendence:
        name: transcendence

volumes:
    django_data:
        name: django_data
        driver_opts:
            type: none
            o: bind
            device: $HOME/goinfre/data/django
    nginx_data:
        name: nginx_data
        driver_opts:
            type: none
            o: bind
            device: $HOME/goinfre/data/nginx
    django_logs:
        name: django_logs
    postgres_data:
        name: postgres_data
    postgres_logs:
        name: postgres_logs
    nginx_logs:
        name: nginx_logs
    static_data:
        name: static_data
    elasticsearch_data:
        name: elasticsearch_data
    elasticsearch_logs:
        name: elasticsearch_logs
    kibana_logs:
        name: kibana_logs

secrets:
    postgres-passwd:
        file: ./secrets/postgres-passwd.txt
    django-passwd:
        file: ./secrets/django-passwd.txt
    elasticsearch-passwd:
        file: ./secrets/elasticsearch-passwd.txt
    kibana-passwd:
        file: ./secrets/kibana-passwd.txt
